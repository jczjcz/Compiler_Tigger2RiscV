Terminals unused in grammar

   AND
   OR
   PARAM


Grammar

    0 $accept: Program $end

    1 Program: ProgramUnit
    2        | Program ProgramUnit

    3 ProgramUnit: GlobalVarDecl
    4            | FunctionDef

    5 GlobalVarDecl: IDENT ASSIGN NUM
    6              | IDENT ASSIGN MALLOC NUM

    7 FunctionDef: FunctionHeader Expressions FunctionEnd

    8 FunctionHeader: FUNC LBRAC NUM RBRAC LBRAC NUM RBRAC

    9 FunctionEnd: END FUNC

   10 Expressions: Expression
   11            | Expressions Expression

   12 Expression: REG ASSIGN NUM
   13           | RETURN
   14           | REG ASSIGN REG BinOp REG
   15           | REG ASSIGN REG BinOp NUM
   16           | REG ASSIGN OP REG
   17           | REG ASSIGN REG
   18           | REG LBRAC NUM RBRAC ASSIGN REG
   19           | REG ASSIGN REG LBRAC NUM RBRAC
   20           | IF REG LOGICOP REG GOTO LABEL
   21           | GOTO LABEL
   22           | LABEL COLON
   23           | CALL FUNC
   24           | STORE REG NUM
   25           | LOAD NUM REG
   26           | LOAD IDENT REG
   27           | LOADADDR NUM REG
   28           | LOADADDR IDENT REG

   29 BinOp: OP
   30      | LOGICOP

   31 OP: NOT
   32   | ADD
   33   | SUB
   34   | MUL
   35   | DIV
   36   | MOD

   37 LOGICOP: LE
   38        | LEQ
   39        | GE
   40        | GEQ
   41        | EQ
   42        | NEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 32
SUB (259) 33
MUL (260) 34
DIV (261) 35
MOD (262) 36
ASSIGN (263) 5 6 12 14 15 16 17 18 19
EQ (264) 41
NEQ (265) 42
LE (266) 37
LEQ (267) 38
GE (268) 39
GEQ (269) 40
NOT (270) 31
AND (271)
OR (272)
NUM (273) 5 6 8 12 15 18 19 24 25 27
IDENT (274) 5 6 26 28
MALLOC (275) 6
LBRAC (276) 8 18 19
RBRAC (277) 8 18 19
IF (278) 20
GOTO (279) 20 21
LABEL (280) 20 21 22
PARAM (281)
CALL (282) 23
RETURN (283) 13
COLON (284) 22
FUNC (285) 8 9 23
END (286) 9
REG (287) 12 14 15 16 17 18 19 20 24 25 26 27 28
STORE (288) 24
LOAD (289) 25 26
LOADADDR (290) 27 28


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Program (37)
    on left: 1 2, on right: 0 2
ProgramUnit (38)
    on left: 3 4, on right: 1 2
GlobalVarDecl (39)
    on left: 5 6, on right: 3
FunctionDef (40)
    on left: 7, on right: 4
FunctionHeader (41)
    on left: 8, on right: 7
FunctionEnd (42)
    on left: 9, on right: 7
Expressions (43)
    on left: 10 11, on right: 7 11
Expression (44)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    10 11
BinOp (45)
    on left: 29 30, on right: 14 15
OP (46)
    on left: 31 32 33 34 35 36, on right: 16 29
LOGICOP (47)
    on left: 37 38 39 40 41 42, on right: 20 30


State 0

    0 $accept: . Program $end

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2

    Program         go to state 3
    ProgramUnit     go to state 4
    GlobalVarDecl   go to state 5
    FunctionDef     go to state 6
    FunctionHeader  go to state 7


State 1

    5 GlobalVarDecl: IDENT . ASSIGN NUM
    6              | IDENT . ASSIGN MALLOC NUM

    ASSIGN  shift, and go to state 8


State 2

    8 FunctionHeader: FUNC . LBRAC NUM RBRAC LBRAC NUM RBRAC

    LBRAC  shift, and go to state 9


State 3

    0 $accept: Program . $end
    2 Program: Program . ProgramUnit

    $end   shift, and go to state 10
    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2

    ProgramUnit     go to state 11
    GlobalVarDecl   go to state 5
    FunctionDef     go to state 6
    FunctionHeader  go to state 7


State 4

    1 Program: ProgramUnit .

    $default  reduce using rule 1 (Program)


State 5

    3 ProgramUnit: GlobalVarDecl .

    $default  reduce using rule 3 (ProgramUnit)


State 6

    4 ProgramUnit: FunctionDef .

    $default  reduce using rule 4 (ProgramUnit)


State 7

    7 FunctionDef: FunctionHeader . Expressions FunctionEnd

    IF        shift, and go to state 12
    GOTO      shift, and go to state 13
    LABEL     shift, and go to state 14
    CALL      shift, and go to state 15
    RETURN    shift, and go to state 16
    REG       shift, and go to state 17
    STORE     shift, and go to state 18
    LOAD      shift, and go to state 19
    LOADADDR  shift, and go to state 20

    Expressions  go to state 21
    Expression   go to state 22


State 8

    5 GlobalVarDecl: IDENT ASSIGN . NUM
    6              | IDENT ASSIGN . MALLOC NUM

    NUM     shift, and go to state 23
    MALLOC  shift, and go to state 24


State 9

    8 FunctionHeader: FUNC LBRAC . NUM RBRAC LBRAC NUM RBRAC

    NUM  shift, and go to state 25


State 10

    0 $accept: Program $end .

    $default  accept


State 11

    2 Program: Program ProgramUnit .

    $default  reduce using rule 2 (Program)


State 12

   20 Expression: IF . REG LOGICOP REG GOTO LABEL

    REG  shift, and go to state 26


State 13

   21 Expression: GOTO . LABEL

    LABEL  shift, and go to state 27


State 14

   22 Expression: LABEL . COLON

    COLON  shift, and go to state 28


State 15

   23 Expression: CALL . FUNC

    FUNC  shift, and go to state 29


State 16

   13 Expression: RETURN .

    $default  reduce using rule 13 (Expression)


State 17

   12 Expression: REG . ASSIGN NUM
   14           | REG . ASSIGN REG BinOp REG
   15           | REG . ASSIGN REG BinOp NUM
   16           | REG . ASSIGN OP REG
   17           | REG . ASSIGN REG
   18           | REG . LBRAC NUM RBRAC ASSIGN REG
   19           | REG . ASSIGN REG LBRAC NUM RBRAC

    ASSIGN  shift, and go to state 30
    LBRAC   shift, and go to state 31


State 18

   24 Expression: STORE . REG NUM

    REG  shift, and go to state 32


State 19

   25 Expression: LOAD . NUM REG
   26           | LOAD . IDENT REG

    NUM    shift, and go to state 33
    IDENT  shift, and go to state 34


State 20

   27 Expression: LOADADDR . NUM REG
   28           | LOADADDR . IDENT REG

    NUM    shift, and go to state 35
    IDENT  shift, and go to state 36


State 21

    7 FunctionDef: FunctionHeader Expressions . FunctionEnd
   11 Expressions: Expressions . Expression

    IF        shift, and go to state 12
    GOTO      shift, and go to state 13
    LABEL     shift, and go to state 14
    CALL      shift, and go to state 15
    RETURN    shift, and go to state 16
    END       shift, and go to state 37
    REG       shift, and go to state 17
    STORE     shift, and go to state 18
    LOAD      shift, and go to state 19
    LOADADDR  shift, and go to state 20

    FunctionEnd  go to state 38
    Expression   go to state 39


State 22

   10 Expressions: Expression .

    $default  reduce using rule 10 (Expressions)


State 23

    5 GlobalVarDecl: IDENT ASSIGN NUM .

    $default  reduce using rule 5 (GlobalVarDecl)


State 24

    6 GlobalVarDecl: IDENT ASSIGN MALLOC . NUM

    NUM  shift, and go to state 40


State 25

    8 FunctionHeader: FUNC LBRAC NUM . RBRAC LBRAC NUM RBRAC

    RBRAC  shift, and go to state 41


State 26

   20 Expression: IF REG . LOGICOP REG GOTO LABEL

    EQ   shift, and go to state 42
    NEQ  shift, and go to state 43
    LE   shift, and go to state 44
    LEQ  shift, and go to state 45
    GE   shift, and go to state 46
    GEQ  shift, and go to state 47

    LOGICOP  go to state 48


State 27

   21 Expression: GOTO LABEL .

    $default  reduce using rule 21 (Expression)


State 28

   22 Expression: LABEL COLON .

    $default  reduce using rule 22 (Expression)


State 29

   23 Expression: CALL FUNC .

    $default  reduce using rule 23 (Expression)


State 30

   12 Expression: REG ASSIGN . NUM
   14           | REG ASSIGN . REG BinOp REG
   15           | REG ASSIGN . REG BinOp NUM
   16           | REG ASSIGN . OP REG
   17           | REG ASSIGN . REG
   19           | REG ASSIGN . REG LBRAC NUM RBRAC

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    MOD  shift, and go to state 53
    NOT  shift, and go to state 54
    NUM  shift, and go to state 55
    REG  shift, and go to state 56

    OP  go to state 57


State 31

   18 Expression: REG LBRAC . NUM RBRAC ASSIGN REG

    NUM  shift, and go to state 58


State 32

   24 Expression: STORE REG . NUM

    NUM  shift, and go to state 59


State 33

   25 Expression: LOAD NUM . REG

    REG  shift, and go to state 60


State 34

   26 Expression: LOAD IDENT . REG

    REG  shift, and go to state 61


State 35

   27 Expression: LOADADDR NUM . REG

    REG  shift, and go to state 62


State 36

   28 Expression: LOADADDR IDENT . REG

    REG  shift, and go to state 63


State 37

    9 FunctionEnd: END . FUNC

    FUNC  shift, and go to state 64


State 38

    7 FunctionDef: FunctionHeader Expressions FunctionEnd .

    $default  reduce using rule 7 (FunctionDef)


State 39

   11 Expressions: Expressions Expression .

    $default  reduce using rule 11 (Expressions)


State 40

    6 GlobalVarDecl: IDENT ASSIGN MALLOC NUM .

    $default  reduce using rule 6 (GlobalVarDecl)


State 41

    8 FunctionHeader: FUNC LBRAC NUM RBRAC . LBRAC NUM RBRAC

    LBRAC  shift, and go to state 65


State 42

   41 LOGICOP: EQ .

    $default  reduce using rule 41 (LOGICOP)


State 43

   42 LOGICOP: NEQ .

    $default  reduce using rule 42 (LOGICOP)


State 44

   37 LOGICOP: LE .

    $default  reduce using rule 37 (LOGICOP)


State 45

   38 LOGICOP: LEQ .

    $default  reduce using rule 38 (LOGICOP)


State 46

   39 LOGICOP: GE .

    $default  reduce using rule 39 (LOGICOP)


State 47

   40 LOGICOP: GEQ .

    $default  reduce using rule 40 (LOGICOP)


State 48

   20 Expression: IF REG LOGICOP . REG GOTO LABEL

    REG  shift, and go to state 66


State 49

   32 OP: ADD .

    $default  reduce using rule 32 (OP)


State 50

   33 OP: SUB .

    $default  reduce using rule 33 (OP)


State 51

   34 OP: MUL .

    $default  reduce using rule 34 (OP)


State 52

   35 OP: DIV .

    $default  reduce using rule 35 (OP)


State 53

   36 OP: MOD .

    $default  reduce using rule 36 (OP)


State 54

   31 OP: NOT .

    $default  reduce using rule 31 (OP)


State 55

   12 Expression: REG ASSIGN NUM .

    $default  reduce using rule 12 (Expression)


State 56

   14 Expression: REG ASSIGN REG . BinOp REG
   15           | REG ASSIGN REG . BinOp NUM
   17           | REG ASSIGN REG .
   19           | REG ASSIGN REG . LBRAC NUM RBRAC

    ADD    shift, and go to state 49
    SUB    shift, and go to state 50
    MUL    shift, and go to state 51
    DIV    shift, and go to state 52
    MOD    shift, and go to state 53
    EQ     shift, and go to state 42
    NEQ    shift, and go to state 43
    LE     shift, and go to state 44
    LEQ    shift, and go to state 45
    GE     shift, and go to state 46
    GEQ    shift, and go to state 47
    NOT    shift, and go to state 54
    LBRAC  shift, and go to state 67

    $default  reduce using rule 17 (Expression)

    BinOp    go to state 68
    OP       go to state 69
    LOGICOP  go to state 70


State 57

   16 Expression: REG ASSIGN OP . REG

    REG  shift, and go to state 71


State 58

   18 Expression: REG LBRAC NUM . RBRAC ASSIGN REG

    RBRAC  shift, and go to state 72


State 59

   24 Expression: STORE REG NUM .

    $default  reduce using rule 24 (Expression)


State 60

   25 Expression: LOAD NUM REG .

    $default  reduce using rule 25 (Expression)


State 61

   26 Expression: LOAD IDENT REG .

    $default  reduce using rule 26 (Expression)


State 62

   27 Expression: LOADADDR NUM REG .

    $default  reduce using rule 27 (Expression)


State 63

   28 Expression: LOADADDR IDENT REG .

    $default  reduce using rule 28 (Expression)


State 64

    9 FunctionEnd: END FUNC .

    $default  reduce using rule 9 (FunctionEnd)


State 65

    8 FunctionHeader: FUNC LBRAC NUM RBRAC LBRAC . NUM RBRAC

    NUM  shift, and go to state 73


State 66

   20 Expression: IF REG LOGICOP REG . GOTO LABEL

    GOTO  shift, and go to state 74


State 67

   19 Expression: REG ASSIGN REG LBRAC . NUM RBRAC

    NUM  shift, and go to state 75


State 68

   14 Expression: REG ASSIGN REG BinOp . REG
   15           | REG ASSIGN REG BinOp . NUM

    NUM  shift, and go to state 76
    REG  shift, and go to state 77


State 69

   29 BinOp: OP .

    $default  reduce using rule 29 (BinOp)


State 70

   30 BinOp: LOGICOP .

    $default  reduce using rule 30 (BinOp)


State 71

   16 Expression: REG ASSIGN OP REG .

    $default  reduce using rule 16 (Expression)


State 72

   18 Expression: REG LBRAC NUM RBRAC . ASSIGN REG

    ASSIGN  shift, and go to state 78


State 73

    8 FunctionHeader: FUNC LBRAC NUM RBRAC LBRAC NUM . RBRAC

    RBRAC  shift, and go to state 79


State 74

   20 Expression: IF REG LOGICOP REG GOTO . LABEL

    LABEL  shift, and go to state 80


State 75

   19 Expression: REG ASSIGN REG LBRAC NUM . RBRAC

    RBRAC  shift, and go to state 81


State 76

   15 Expression: REG ASSIGN REG BinOp NUM .

    $default  reduce using rule 15 (Expression)


State 77

   14 Expression: REG ASSIGN REG BinOp REG .

    $default  reduce using rule 14 (Expression)


State 78

   18 Expression: REG LBRAC NUM RBRAC ASSIGN . REG

    REG  shift, and go to state 82


State 79

    8 FunctionHeader: FUNC LBRAC NUM RBRAC LBRAC NUM RBRAC .

    $default  reduce using rule 8 (FunctionHeader)


State 80

   20 Expression: IF REG LOGICOP REG GOTO LABEL .

    $default  reduce using rule 20 (Expression)


State 81

   19 Expression: REG ASSIGN REG LBRAC NUM RBRAC .

    $default  reduce using rule 19 (Expression)


State 82

   18 Expression: REG LBRAC NUM RBRAC ASSIGN REG .

    $default  reduce using rule 18 (Expression)
